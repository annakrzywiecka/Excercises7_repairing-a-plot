<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head>

<meta charset="utf-8">
<meta name="generator" content="quarto-1.3.353">

<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">

<meta name="author" content="Anna Krzywiecka">

<title>Rapairing a bad plot</title>
<style>
code{white-space: pre-wrap;}
span.smallcaps{font-variant: small-caps;}
div.columns{display: flex; gap: min(4vw, 1.5em);}
div.column{flex: auto; overflow-x: auto;}
div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
ul.task-list{list-style: none;}
ul.task-list li input[type="checkbox"] {
  width: 0.8em;
  margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ 
  vertical-align: middle;
}
/* CSS for syntax highlighting */
pre > code.sourceCode { white-space: pre; position: relative; }
pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }
pre > code.sourceCode > span:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode > span { color: inherit; text-decoration: inherit; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
pre > code.sourceCode { white-space: pre-wrap; }
pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
}
pre.numberSource code
  { counter-reset: source-line 0; }
pre.numberSource code > span
  { position: relative; left: -4em; counter-increment: source-line; }
pre.numberSource code > span > a:first-child::before
  { content: counter(source-line);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
  }
pre.numberSource { margin-left: 3em;  padding-left: 4px; }
div.sourceCode
  {   }
@media screen {
pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
}
</style>


<script src="code_for_repairing_a_plot_files/libs/clipboard/clipboard.min.js"></script>
<script src="code_for_repairing_a_plot_files/libs/quarto-html/quarto.js"></script>
<script src="code_for_repairing_a_plot_files/libs/quarto-html/popper.min.js"></script>
<script src="code_for_repairing_a_plot_files/libs/quarto-html/tippy.umd.min.js"></script>
<script src="code_for_repairing_a_plot_files/libs/quarto-html/anchor.min.js"></script>
<link href="code_for_repairing_a_plot_files/libs/quarto-html/tippy.css" rel="stylesheet">
<link href="code_for_repairing_a_plot_files/libs/quarto-html/quarto-syntax-highlighting.css" rel="stylesheet" id="quarto-text-highlighting-styles">
<script src="code_for_repairing_a_plot_files/libs/bootstrap/bootstrap.min.js"></script>
<link href="code_for_repairing_a_plot_files/libs/bootstrap/bootstrap-icons.css" rel="stylesheet">
<link href="code_for_repairing_a_plot_files/libs/bootstrap/bootstrap.min.css" rel="stylesheet" id="quarto-bootstrap" data-mode="light">


</head>

<body class="fullcontent">

<div id="quarto-content" class="page-columns page-rows-contents page-layout-article">

<main class="content" id="quarto-document-content">

<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
<h1 class="title">Rapairing a bad plot</h1>
</div>



<div class="quarto-title-meta">

    <div>
    <div class="quarto-title-meta-heading">Author</div>
    <div class="quarto-title-meta-contents">
             <p>Anna Krzywiecka </p>
          </div>
  </div>
    
  
    
  </div>
  

</header>

<div class="cell">
<div class="sourceCode cell-code" id="cb1"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>knitr<span class="sc">::</span>opts_chunk<span class="sc">$</span><span class="fu">set</span>(<span class="at">echo =</span> <span class="cn">TRUE</span>)</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="fu">library</span>(<span class="st">"tidyr"</span>)</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="fu">library</span>(<span class="st">"dplyr"</span>)</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="fu">library</span>(<span class="st">"ggplot2"</span>)</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
<section id="aim" class="level2">
<h2 class="anchored" data-anchor-id="aim">Aim</h2>
<p>My aim is to repair this plot:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="images/plot_to_be_repaired.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">badplot</figcaption>
</figure>
</div>
</section>
<section id="code" class="level2">
<h2 class="anchored" data-anchor-id="code">Code</h2>
<p>At first I load the csv file that I created myself. I assumed that the sum of numbers (not the percentage value) in each group of voters equals the (100% - percentage_value). Then I used proportion to count a number of votes in each category. Afterwards I created a data frame out of the csv data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>Table_votes_wide<span class="ot">&lt;-</span>readr<span class="sc">::</span><span class="fu">read_csv</span>(<span class="st">"votes"</span>)</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>Table_votes_wide[<span class="dv">1</span>,<span class="dv">2</span>] <span class="ot">&lt;-</span> <span class="fu">round</span>((Table_votes_wide[<span class="dv">2</span>,<span class="dv">3</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">4</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">5</span>])<span class="sc">/</span><span class="fl">0.71</span>)</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>Table_votes_wide[<span class="dv">1</span>,<span class="dv">3</span>] <span class="ot">&lt;-</span><span class="fu">round</span>((Table_votes_wide[<span class="dv">2</span>,<span class="dv">3</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">4</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">5</span>])<span class="sc">/</span><span class="fl">0.36</span>)</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>Table_votes_wide[<span class="dv">1</span>,<span class="dv">4</span>] <span class="ot">&lt;-</span> <span class="fu">round</span>((Table_votes_wide[<span class="dv">2</span>,<span class="dv">3</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">4</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">5</span>])<span class="sc">/</span><span class="fl">0.96</span>)</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>Table_votes_wide[<span class="dv">1</span>,<span class="dv">5</span>] <span class="ot">&lt;-</span> <span class="fu">round</span>((Table_votes_wide[<span class="dv">2</span>,<span class="dv">3</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">4</span>]<span class="sc">+</span>Table_votes_wide[<span class="dv">2</span>,<span class="dv">5</span>])<span class="sc">/</span><span class="fl">0.84</span>)</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>Table_votes_wide <span class="ot">&lt;-</span> <span class="fu">data.frame</span>(Table_votes_wide)</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>Table_votes_wide</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         VoteCategory Allregisteredvoters Republicans Democrats Independents
1    Strongly approve                  69         136        51           58
2    Somewhat approve                  16          24         5           20
3 Somewhat disapprove                   8           4         9           12
4 Strongly disapprove                   4           5        80           46</code></pre>
</div>
</div>
<p>Then I wanted to create a v of a longer format so I used the <code>pivot_longer(data=Table_votes_wide)</code>.Next step was to make a column out of the headings of rows. Their values are now in a column ‘number’ and their names are in a column ‘Voters_Group’ and this column is redundant (which is a normal thing for a longer data format).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>Table_votes_long<span class="ot">&lt;-</span><span class="fu">pivot_longer</span>(<span class="at">data=</span>Table_votes_wide, </span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>                             <span class="at">cols=</span><span class="fu">colnames</span>(Table_votes_wide)[<span class="sc">-</span><span class="dv">1</span>],</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>                             <span class="at">values_to =</span> <span class="st">"number"</span>,</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>                             <span class="at">names_to =</span> <span class="st">"Voters_Group"</span>)</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>Table_votes_long</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 16 × 3
   VoteCategory        Voters_Group        number
   &lt;chr&gt;               &lt;chr&gt;                &lt;dbl&gt;
 1 Strongly approve    Allregisteredvoters     69
 2 Strongly approve    Republicans            136
 3 Strongly approve    Democrats               51
 4 Strongly approve    Independents            58
 5 Somewhat approve    Allregisteredvoters     16
 6 Somewhat approve    Republicans             24
 7 Somewhat approve    Democrats                5
 8 Somewhat approve    Independents            20
 9 Somewhat disapprove Allregisteredvoters      8
10 Somewhat disapprove Republicans              4
11 Somewhat disapprove Democrats                9
12 Somewhat disapprove Independents            12
13 Strongly disapprove Allregisteredvoters      4
14 Strongly disapprove Republicans              5
15 Strongly disapprove Democrats               80
16 Strongly disapprove Independents            46</code></pre>
</div>
</div>
<p>Subsequently I counted the percentages and put them into a new column. I also wanted to change the name of one of the Voters_Group categories. I needed it to be have spaces for the plotting to look good for the reader.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a>Table_votes_long <span class="ot">&lt;-</span> Table_votes_long <span class="sc">%&gt;%</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>  <span class="fu">group_by</span>(Voters_Group) <span class="sc">%&gt;%</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>  <span class="fu">mutate</span>(<span class="at">sumnum =</span> <span class="fu">sum</span>(number)) <span class="sc">%&gt;%</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>  <span class="fu">mutate</span>(<span class="at">percentage =</span> <span class="fu">round</span>(number<span class="sc">/</span>sumnum,<span class="dv">2</span>)<span class="sc">*</span><span class="dv">100</span>)</span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>  </span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>Table_votes_long <span class="ot">&lt;-</span> Table_votes_long <span class="sc">%&gt;%</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>  <span class="fu">mutate</span>(<span class="at">Voters_Group =</span> <span class="fu">ifelse</span>(Voters_Group <span class="sc">==</span> <span class="st">'Allregisteredvoters'</span>, <span class="st">'All registered voters'</span>, Voters_Group))</span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>  </span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>Table_votes_long</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 16 × 5
# Groups:   Voters_Group [4]
   VoteCategory        Voters_Group          number sumnum percentage
   &lt;chr&gt;               &lt;chr&gt;                  &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;
 1 Strongly approve    All registered voters     69     97         71
 2 Strongly approve    Republicans              136    169         80
 3 Strongly approve    Democrats                 51    145         35
 4 Strongly approve    Independents              58    136         43
 5 Somewhat approve    All registered voters     16     97         16
 6 Somewhat approve    Republicans               24    169         14
 7 Somewhat approve    Democrats                  5    145          3
 8 Somewhat approve    Independents              20    136         15
 9 Somewhat disapprove All registered voters      8     97          8
10 Somewhat disapprove Republicans                4    169          2
11 Somewhat disapprove Democrats                  9    145          6
12 Somewhat disapprove Independents              12    136          9
13 Strongly disapprove All registered voters      4     97          4
14 Strongly disapprove Republicans                5    169          3
15 Strongly disapprove Democrats                 80    145         55
16 Strongly disapprove Independents              46    136         34</code></pre>
</div>
</div>
<p>And finally I create a plot.</p>
<ul>
<li><p>It has Voters_Group on the x axis and percentages of the votes on the y axis. I fill them by the voters choice.</p></li>
<li><p>It is a bar plot which doesn’t show counts of the data in column percentage. It shows simply the percentages thanks to <code>stat = "identity"</code>.</p></li>
<li><p>I added labels for each bar to have an exact value written. I used the <code>geom_text(aes(label = percentage)</code>. And I chose labels position by trying out different values of <code>width</code>, <code>hjust</code> and <code>vjust</code> and this code is my consensus.</p></li>
<li><p>I added the title and other needed labels, e.g.&nbsp;names of axes.</p></li>
<li><p>I also chose a color palette which was magma for discrete values.</p></li>
<li><p>I chose the minimal theme.</p></li>
<li><p>Then I flipped the whole plot because I wanted it to resemble the plot I want to repair. And I had to choose the order of the labels in the legend and the bars on x axis.</p></li>
<li><p>This led to a problem that the legend was going the other way round than the bars displayed so I also had to reverse the order of list in the legend. And I had to choose the order of the bars on x axis.</p></li>
<li><p>Finally I needed to lengthen the y axis to let all the values be visible.</p></li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb8"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a>my_repaired_plot <span class="ot">&lt;-</span><span class="fu">ggplot</span>(<span class="at">data =</span> Table_votes_long, <span class="fu">aes</span>(<span class="at">x =</span> <span class="fu">factor</span>(Voters_Group, <span class="at">levels =</span> <span class="fu">c</span>(<span class="st">"Independents"</span>, <span class="st">"Democrats"</span>, <span class="st">"Republicans"</span>, <span class="st">"All registered voters"</span>)), <span class="at">y =</span> percentage, <span class="at">fill =</span> <span class="fu">factor</span>(VoteCategory, ,<span class="at">levels =</span> <span class="fu">c</span>(<span class="st">"Strongly disapprove"</span>, <span class="st">"Somewhat disapprove"</span>, <span class="st">"Somewhat approve"</span>, <span class="st">"Strongly approve"</span>)))) <span class="sc">+</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>  <span class="fu">geom_bar</span>(<span class="at">stat =</span> <span class="st">"identity"</span>, <span class="at">position =</span> <span class="st">"dodge"</span>, <span class="at">color =</span> <span class="st">'grey'</span>) <span class="sc">+</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>  </span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>  <span class="fu">geom_text</span>(<span class="fu">aes</span>(<span class="at">label =</span> percentage), <span class="at">position =</span> <span class="fu">position_dodge</span>(<span class="at">width =</span> <span class="dv">1</span>), <span class="at">hjust =</span> <span class="sc">-</span><span class="fl">0.5</span>) <span class="sc">+</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>  <span class="fu">labs</span>(<span class="at">title =</span> <span class="st">"Strength of Trump Approval/Disapproval by Party"</span>, </span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>       <span class="at">x =</span> <span class="st">"Voters Group"</span>, </span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a>       <span class="at">y =</span> <span class="st">"Percent of the Votes in each party"</span>,</span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>       <span class="at">fill =</span> <span class="st">"Vote Options"</span>) <span class="sc">+</span>  </span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>  </span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a>  <span class="fu">theme_minimal</span>() <span class="sc">+</span></span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>  <span class="fu">coord_flip</span>() <span class="sc">+</span></span>
<span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>  <span class="fu">guides</span>(<span class="at">fill =</span> <span class="fu">guide_legend</span>(<span class="at">reverse =</span> <span class="cn">FALSE</span>))<span class="sc">+</span></span>
<span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a>  <span class="fu">scale_fill_viridis_d</span>(<span class="at">option =</span> <span class="st">"magma"</span>, <span class="at">breaks =</span> <span class="fu">c</span>(<span class="st">"Strongly approve"</span>, <span class="st">"Somewhat approve"</span>, <span class="st">"Somewhat disapprove"</span>, <span class="st">"Strongly disapprove"</span>)) <span class="sc">+</span></span>
<span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a>  <span class="fu">ylim</span>(<span class="dv">0</span>, <span class="dv">90</span>)</span>
<span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>my_repaired_plot</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
<div class="cell-output-display">
<p><img src="code_for_repairing_a_plot_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here I am saving my plot to an image.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="fu">ggsave</span>(<span class="st">"images/my_repaired_plot.png"</span>, my_repaired_plot, <span class="at">width =</span> <span class="dv">6</span>, <span class="at">height =</span> <span class="dv">4</span>, <span class="at">scale =</span> <span class="dv">1</span>, <span class="at">bg =</span> <span class="st">'white'</span>)</span></code><button title="Copy to Clipboard" class="code-copy-button"><i class="bi"></i></button></pre></div>
</div>
</section>
<section id="outcome" class="level2">
<h2 class="anchored" data-anchor-id="outcome">Outcome</h2>
<p>This is the plot I created: <img src="images/my_repaired_plot.png" class="img-fluid" alt="goodplot"></p>
</section>

</main>
<!-- /main column -->
<script id="quarto-html-after-body" type="application/javascript">
window.document.addEventListener("DOMContentLoaded", function (event) {
  const toggleBodyColorMode = (bsSheetEl) => {
    const mode = bsSheetEl.getAttribute("data-mode");
    const bodyEl = window.document.querySelector("body");
    if (mode === "dark") {
      bodyEl.classList.add("quarto-dark");
      bodyEl.classList.remove("quarto-light");
    } else {
      bodyEl.classList.add("quarto-light");
      bodyEl.classList.remove("quarto-dark");
    }
  }
  const toggleBodyColorPrimary = () => {
    const bsSheetEl = window.document.querySelector("link#quarto-bootstrap");
    if (bsSheetEl) {
      toggleBodyColorMode(bsSheetEl);
    }
  }
  toggleBodyColorPrimary();  
  const icon = "";
  const anchorJS = new window.AnchorJS();
  anchorJS.options = {
    placement: 'right',
    icon: icon
  };
  anchorJS.add('.anchored');
  const isCodeAnnotation = (el) => {
    for (const clz of el.classList) {
      if (clz.startsWith('code-annotation-')) {                     
        return true;
      }
    }
    return false;
  }
  const clipboard = new window.ClipboardJS('.code-copy-button', {
    text: function(trigger) {
      const codeEl = trigger.previousElementSibling.cloneNode(true);
      for (const childEl of codeEl.children) {
        if (isCodeAnnotation(childEl)) {
          childEl.remove();
        }
      }
      return codeEl.innerText;
    }
  });
  clipboard.on('success', function(e) {
    // button target
    const button = e.trigger;
    // don't keep focus
    button.blur();
    // flash "checked"
    button.classList.add('code-copy-button-checked');
    var currentTitle = button.getAttribute("title");
    button.setAttribute("title", "Copied!");
    let tooltip;
    if (window.bootstrap) {
      button.setAttribute("data-bs-toggle", "tooltip");
      button.setAttribute("data-bs-placement", "left");
      button.setAttribute("data-bs-title", "Copied!");
      tooltip = new bootstrap.Tooltip(button, 
        { trigger: "manual", 
          customClass: "code-copy-button-tooltip",
          offset: [0, -8]});
      tooltip.show();    
    }
    setTimeout(function() {
      if (tooltip) {
        tooltip.hide();
        button.removeAttribute("data-bs-title");
        button.removeAttribute("data-bs-toggle");
        button.removeAttribute("data-bs-placement");
      }
      button.setAttribute("title", currentTitle);
      button.classList.remove('code-copy-button-checked');
    }, 1000);
    // clear code selection
    e.clearSelection();
  });
  function tippyHover(el, contentFn) {
    const config = {
      allowHTML: true,
      content: contentFn,
      maxWidth: 500,
      delay: 100,
      arrow: false,
      appendTo: function(el) {
          return el.parentElement;
      },
      interactive: true,
      interactiveBorder: 10,
      theme: 'quarto',
      placement: 'bottom-start'
    };
    window.tippy(el, config); 
  }
  const noterefs = window.document.querySelectorAll('a[role="doc-noteref"]');
  for (var i=0; i<noterefs.length; i++) {
    const ref = noterefs[i];
    tippyHover(ref, function() {
      // use id or data attribute instead here
      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');
      try { href = new URL(href).hash; } catch {}
      const id = href.replace(/^#\/?/, "");
      const note = window.document.getElementById(id);
      return note.innerHTML;
    });
  }
      let selectedAnnoteEl;
      const selectorForAnnotation = ( cell, annotation) => {
        let cellAttr = 'data-code-cell="' + cell + '"';
        let lineAttr = 'data-code-annotation="' +  annotation + '"';
        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';
        return selector;
      }
      const selectCodeLines = (annoteEl) => {
        const doc = window.document;
        const targetCell = annoteEl.getAttribute("data-target-cell");
        const targetAnnotation = annoteEl.getAttribute("data-target-annotation");
        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));
        const lines = annoteSpan.getAttribute("data-code-lines").split(",");
        const lineIds = lines.map((line) => {
          return targetCell + "-" + line;
        })
        let top = null;
        let height = null;
        let parent = null;
        if (lineIds.length > 0) {
            //compute the position of the single el (top and bottom and make a div)
            const el = window.document.getElementById(lineIds[0]);
            top = el.offsetTop;
            height = el.offsetHeight;
            parent = el.parentElement.parentElement;
          if (lineIds.length > 1) {
            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);
            const bottom = lastEl.offsetTop + lastEl.offsetHeight;
            height = bottom - top;
          }
          if (top !== null && height !== null && parent !== null) {
            // cook up a div (if necessary) and position it 
            let div = window.document.getElementById("code-annotation-line-highlight");
            if (div === null) {
              div = window.document.createElement("div");
              div.setAttribute("id", "code-annotation-line-highlight");
              div.style.position = 'absolute';
              parent.appendChild(div);
            }
            div.style.top = top - 2 + "px";
            div.style.height = height + 4 + "px";
            let gutterDiv = window.document.getElementById("code-annotation-line-highlight-gutter");
            if (gutterDiv === null) {
              gutterDiv = window.document.createElement("div");
              gutterDiv.setAttribute("id", "code-annotation-line-highlight-gutter");
              gutterDiv.style.position = 'absolute';
              const codeCell = window.document.getElementById(targetCell);
              const gutter = codeCell.querySelector('.code-annotation-gutter');
              gutter.appendChild(gutterDiv);
            }
            gutterDiv.style.top = top - 2 + "px";
            gutterDiv.style.height = height + 4 + "px";
          }
          selectedAnnoteEl = annoteEl;
        }
      };
      const unselectCodeLines = () => {
        const elementsIds = ["code-annotation-line-highlight", "code-annotation-line-highlight-gutter"];
        elementsIds.forEach((elId) => {
          const div = window.document.getElementById(elId);
          if (div) {
            div.remove();
          }
        });
        selectedAnnoteEl = undefined;
      };
      // Attach click handler to the DT
      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');
      for (const annoteDlNode of annoteDls) {
        annoteDlNode.addEventListener('click', (event) => {
          const clickedEl = event.target;
          if (clickedEl !== selectedAnnoteEl) {
            unselectCodeLines();
            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');
            if (activeEl) {
              activeEl.classList.remove('code-annotation-active');
            }
            selectCodeLines(clickedEl);
            clickedEl.classList.add('code-annotation-active');
          } else {
            // Unselect the line
            unselectCodeLines();
            clickedEl.classList.remove('code-annotation-active');
          }
        });
      }
  const findCites = (el) => {
    const parentEl = el.parentElement;
    if (parentEl) {
      const cites = parentEl.dataset.cites;
      if (cites) {
        return {
          el,
          cites: cites.split(' ')
        };
      } else {
        return findCites(el.parentElement)
      }
    } else {
      return undefined;
    }
  };
  var bibliorefs = window.document.querySelectorAll('a[role="doc-biblioref"]');
  for (var i=0; i<bibliorefs.length; i++) {
    const ref = bibliorefs[i];
    const citeInfo = findCites(ref);
    if (citeInfo) {
      tippyHover(citeInfo.el, function() {
        var popup = window.document.createElement('div');
        citeInfo.cites.forEach(function(cite) {
          var citeDiv = window.document.createElement('div');
          citeDiv.classList.add('hanging-indent');
          citeDiv.classList.add('csl-entry');
          var biblioDiv = window.document.getElementById('ref-' + cite);
          if (biblioDiv) {
            citeDiv.innerHTML = biblioDiv.innerHTML;
          }
          popup.appendChild(citeDiv);
        });
        return popup.innerHTML;
      });
    }
  }
});
</script>
</div> <!-- /content -->



</body></html>